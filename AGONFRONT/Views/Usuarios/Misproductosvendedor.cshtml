@model List<AGONFRONT.Models.Productos>

@{
    ViewBag.Title = "Mis Productos";
    Layout = "~/Views/Shared/_LayoutGestionVendedor.cshtml";
}

@section Styles {
    <link rel="stylesheet" href="~/Content/css/GestionProductos.css" />
}

<header class="page-header">
    <h1 class="page-title">Mis Productos</h1>
</header>

@if (TempData["Error"] != null)
{
    <div class="alert alert-danger">@TempData["Error"]</div>
}
@if (TempData["Success"] != null)
{
    <div class="alert alert-success">@TempData["Success"]</div>
}

<!-- Tabla de productos -->
@if (Model != null && Model.Any())
{
    <section class="profile-section">
        <h2 class="section-title">Lista de Productos</h2>
        <div class="table-responsive">
            <table class="table table-bordered align-middle">
                <thead class="table-dark text-center">
                    <tr>
                        <th>ID</th>
                        <th>Nombre</th>
                        <th>Descripción</th>
                        <th>Precio</th>
                        <th>Stock</th>
                        <th>Guardar</th>
                        <th>Eliminar</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var producto in Model)
                    {
                        <tr class="text-center">
                            <td>@producto.Id</td>
                            <td>@producto.Nombre</td>
                            <td>@producto.Descripcion</td>
                            <td>
                                @using (Html.BeginForm("EditarMiProducto", "Usuarios", FormMethod.Post, new { @class = "d-inline" }))
                                {
                                    @Html.Hidden("Id", producto.Id)
                                    @Html.Hidden("Nombre", producto.Nombre)
                                    @Html.Hidden("Descripcion", producto.Descripcion)
                                    @Html.Hidden("UrlImagen", producto.UrlImagen)
                                    @Html.Hidden("FechaCreacion", producto.FechaCreacion.ToString("yyyy-MM-ddTHH:mm:ss"))
                                    @Html.Hidden("CategoriaId", producto.CategoriaId)
                                    @Html.Hidden("VendedorId", producto.VendedorId)

                                    <input type="number" name="Precio" step="0.01" min="0"
                                           value="@producto.Precio.ToString("0.##", System.Globalization.CultureInfo.InvariantCulture)"
                                           class="form-control mb-2" required />

                                <td>
                                    <input type="number" name="Stock" min="0"
                                           value="@producto.Stock"
                                           class="form-control mb-2" required />
                                </td>
                                <td>
                                    <button type="submit" class="btn btn-warning">Guardar</button>
                                </td>
                            }
                                </td>
                                <td>
                                    @using (Html.BeginForm("EliminarMiProducto", "Usuarios", FormMethod.Post, new { onsubmit = "return confirm('¿Estás seguro de que deseas eliminar este producto?');", @class = "d-inline" }))
                                    {
                                        <input type="hidden" name="id" value="@producto.Id" />
                                        <button type="submit" class="btn btn-danger">Eliminar</button>
                                    }
                                </td>
                            </tr>
                        }
                </tbody>
            </table>
        </div>
    </section>
}
else
{
    <p class="text-muted">No tienes productos registrados.</p>
}

@section Scripts {
    <script>
        document.querySelectorAll("form").forEach(form => {
            form.addEventListener("submit", function (e) {
                const precioInput = form.querySelector("input[name='Precio']");
                const stockInput = form.querySelector("input[name='Stock']");

                const precio = parseFloat(precioInput?.value.trim().replace(",", ".") || "0");
                const stock = parseInt(stockInput?.value.trim() || "0");

                if (isNaN(precio) || precio < 0) {
                    alert("El precio no puede ser negativo.");
                    e.preventDefault();
                    return;
                }

                if (isNaN(stock) || stock < 0) {
                    alert("El stock debe ser un número positivo.");
                    e.preventDefault();
                }
            });
        });
    </script>
}
