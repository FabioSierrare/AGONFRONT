@model AGONFRONT.Models.Usuarios

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Opciones de inicio";
}

<head>
    <link rel="stylesheet" href="~/Content/css/.css" asp-append-version="true">
</head>


<div class="container d-flex justify-content-center align-items-center" style="height: 100vh; transition: opacity 0.5s ease-in-out;">
    <div class="card p-4" style="width: 400px;">
        <div class="row mb-4">
            <div class="col-2 d-flex align-items-center">
                <img src="@(Url.Content("~/Content/img/logo2.svg"))" alt="Logo" width="60px" class="img-fluid">
            </div>
            <div class="col-10 d-flex align-items-center">
                <h4 class="mb-0" style="margin-left: -20px;">AGON</h4>
            </div>
        </div>

        <h3 class="text-center mb-4">Registro</h3>
        @using (Html.BeginForm("Create", "Usuarios", FormMethod.Post))

        {
            @Html.AntiForgeryToken()
            <form id="registroForm" method="post">
                <div id="paso1">

                    <div class="mb-3">
                        @Html.LabelFor(m => m.Nombre, new { @class = "form-label" })
                        @Html.TextBoxFor(m => m.Nombre, new { @class = "form-control form-control-lg" })
                        @Html.ValidationMessageFor(m => m.Nombre, "", new { @class = "text-danger" })
                    </div>

                    <div class="mb-3">
                        @Html.LabelFor(m => m.Correo, new { @class = "form-label" })
                        @Html.TextBoxFor(m => m.Correo, new { @class = "form-control form-control-lg" })
                        @Html.ValidationMessageFor(m => m.Correo, "", new { @class = "text-danger" })
                    </div>

                    <div class="mb-3">
                        @Html.LabelFor(m => m.Direccion, new { @class = "form-label" })
                        @Html.TextBoxFor(m => m.Direccion, new { @class = "form-control form-control-lg" })
                        @Html.ValidationMessageFor(m => m.Direccion, "", new { @class = "text-danger" })
                    </div>

                    <div class="mb-3">
                        @Html.LabelFor(m => m.Telefono, new { @class = "form-label" })
                        @Html.TextBoxFor(m => m.Telefono, new { @class = "form-control form-control-lg" })
                        @Html.ValidationMessageFor(m => m.Telefono, "", new { @class = "text-danger" })
                    </div>

                    <div class="d-grid gap-2">
                        <button type="button" class="btn btn-success" onclick="mostrarPaso2()">Continuar</button>
                    </div>
                </div>

                <div id="paso2" style="display: none;">

                    <!-- Contraseña -->
                    <div class="mb-3">
                        @Html.LabelFor(m => m.Contraseña, new { @class = "form-label" })
                        @Html.PasswordFor(m => m.Contraseña, new { @class = "form-control", id = "contraseña" })
                        @Html.ValidationMessageFor(m => m.Contraseña, "", new { @class = "text-danger" })
                    </div>

                    <!-- Confirmar Contraseña -->
                    <div class="mb-3">
                        @Html.LabelFor(m => m.ConfirmarContraseña, new { @class = "form-label" })
                        @Html.PasswordFor(m => m.ConfirmarContraseña, new { @class = "form-control", id = "confirmarContraseña" })
                        @Html.ValidationMessageFor(m => m.ConfirmarContraseña, "", new { @class = "text-danger" })
                        <small id="errorMensaje" class="text-danger d-none">Las contraseñas no coinciden.</small>
                    </div>
                    <!-- Campo oculto para "TipoUsuario" con valor fijo "1" -->
                    @Html.Hidden("TipoUsuario", "Cliente")

                    <!-- Otros campos del formulario -->

                    @Html.HiddenFor(m => m.FechaCreacion, new { @Value = DateTime.UtcNow.ToString("yyyy-MM-ddTHH:mm:ss") })


                    <div class="mb-3">
                        @Html.LabelFor(m => m.TipoDocumento, new { @class = "form-label" })
                        @Html.DropDownListFor(m => m.TipoDocumento, new List<SelectListItem>
                        {
                            new SelectListItem { Text = "Selecciona un tipo de documento", Value = "", Selected = true },
                            new SelectListItem { Text = "DNI", Value = "DNI" },
                            new SelectListItem { Text = "Pasaporte", Value = "Pasaporte" },
                            new SelectListItem { Text = "Cédula", Value = "Cedula" }
                        }, new { @class = "form-control", required = "required" })
                        @Html.ValidationMessageFor(m => m.TipoDocumento, "", new { @class = "text-danger" })
                    </div>
                    <div class="mb-3">
                        @Html.LabelFor(m => m.Documento, new { @class = "form-label" })
                        @Html.TextBoxFor(m => m.Documento, new { @class = "form-control", type = "number", min = "1", step = "1", required = "required" })
                        @Html.ValidationMessageFor(m => m.Documento, "", new { @class = "text-danger" })
                    </div>
                    <div class="d-grid gap-2">
                        <button type="submit" class="btn btn-success">Registrarse</button>
                    </div>
</form>
        }
        @if (TempData["Error"] != null)
        {
            <div class="alert alert-danger">@TempData["Error"]</div>
        }
    </div>
</div>



<script>

    function mostrarPaso2() {
        document.getElementById("paso1").style.display = "none";
        document.getElementById("paso2").style.display = "block";
    }
</script>
