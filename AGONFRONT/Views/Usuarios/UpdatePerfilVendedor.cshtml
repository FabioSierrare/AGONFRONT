@model List<AGONFRONT.Models.Usuarios>

@{
    var emailUsuario = Session["UserEmail"] as string;
    var usuario = Model?.FirstOrDefault(u => u.Correo == emailUsuario);
    Layout = "~/Views/Shared/_LayoutGestionVendedor.cshtml";
}
<head>
    <style>
        .main-content {
            flex: 1;
            margin-left: var(--sidebar-width);
            padding: 2rem;
            transition: var(--transition);
        }

        .page-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 2rem;
            padding-bottom: 1rem;
            border-bottom: 1px solid rgba(0, 0, 0, 0.1);
        }

        .page-title {
            font-family: 'Merriweather', serif;
            font-weight: 700;
            color: var(--primary-dark);
            margin: 0;
        }

        .page-description {
            color: #666;
            margin-top: 0.5rem;
        }

        /* Profile Sections */
        .profile-section {
            background: white;
            border-radius: 10px;
            box-shadow: var(--shadow-sm);
            padding: 2rem;
            margin-bottom: 2rem;
            transition: var(--transition);
        }

            .profile-section:hover {
                box-shadow: var(--shadow-md);
            }

        .section-title {
            font-weight: 600;
            color: var(--primary-dark);
            margin-bottom: 1.5rem;
            padding-bottom: 0.75rem;
            border-bottom: 2px solid var(--primary-light);
        }

        /* Personal Info Form */
        .profile-form .form-group {
            margin-bottom: 1.5rem;
        }

        .profile-form label {
            font-weight: 500;
            margin-bottom: 0.5rem;
            display: block;
        }

        .profile-form .form-control {
            border-radius: 8px;
            padding: 0.75rem 1rem;
            border: 1px solid #ddd;
            transition: var(--transition);
        }

            .profile-form .form-control:focus {
                border-color: var(--primary);
                box-shadow: 0 0 0 0.2rem rgba(39, 174, 96, 0.25);
            }

        .btn-save {
            background: linear-gradient(135deg, var(--primary), var(--secondary));
            color: white;
            border: none;
            padding: 0.75rem 1.5rem;
            border-radius: 8px;
            font-weight: 600;
            transition: var(--transition);
            box-shadow: 0 4px 15px rgba(39, 174, 96, 0.3);
        }

            .btn-save:hover {
                transform: translateY(-2px);
                box-shadow: 0 8px 20px rgba(39, 174, 96, 0.4);
            }

        .btn-cancel {
            background: #808080;
            color: white;
            border: none;
            padding: 0.75rem 1.5rem;
            border-radius: 8px;
            font-weight: 600;
            transition: var(--transition);
            box-shadow: 0 4px 15px rgba(39, 174, 96, 0.3);
        }

            .btn-save:hover {
                transform: translateY(-2px);
                box-shadow: 0 8px 20px rgba(39, 174, 96, 0.4);
            }
    </style>
</head>

@if (usuario != null)
{

    <div class="profile-section">
        <h2 class="section-title">
            <i class="bi bi-person-lines-fill me-2"></i>Información Personal
        </h2>

        @using (Html.BeginForm("UpdateUsuario", "Usuarios", FormMethod.Post, new { @class = "profile-form" }))
        {
            @Html.HiddenFor(m => usuario.Id)
            @Html.HiddenFor(m => usuario.Correo)
            @Html.HiddenFor(m => usuario.Documento)
            @Html.HiddenFor(m => usuario.Contraseña)
            @Html.HiddenFor(m => usuario.TipoUsuarioId)
            @Html.HiddenFor(m => usuario.TipoDocumento)

            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <label>Nombre</label>
                        @Html.TextBoxFor(m => usuario.Nombre, new { @class = "form-control sl", required = "required" })
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label>Teléfono</label>
                        @Html.TextBoxFor(m => usuario.Telefono, new { @class = "form-control sn", required = "required" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                <label>Correo Electrónico</label>
                <input type="email" class="form-control" value="@usuario.Correo" readonly />
            </div>

            <div class="form-group">
                <label>Dirección</label>
                @Html.TextBoxFor(m => usuario.Direccion, new { @class = "form-control" })
            </div>

            <button type="submit" class="btn-save m-r-3">
                <i class="bi bi-check-circle me-2"></i>Guardar Cambios
            </button>
            <a href="/Usuarios/Perfil" class="btn-cancel" style="margin-left: 20px;">Cancelar</a>
        }
    </div>
}
else
{
    <div class="alert alert-warning">No se encontró información del usuario.</div>
}

@if (TempData["Error"] != null)
{
    <div class="alert alert-danger mt-3">@TempData["Error"]</div>
}
