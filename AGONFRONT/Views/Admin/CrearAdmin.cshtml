@model AGONFRONT.Models.Usuarios

@{
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
    ViewData["Title"] = "Crear Administrador";
}

<div class="container d-flex justify-content-center align-items-center" style="height:100vh;">
    <div class="card p-4" style="width:400px;">
        <div class="text-center mb-4">
            <img src="@(Url.Content("~/Content/img/logo2.svg"))" alt="Logo" width="60" />
            <h3>Crear Administrador</h3>
        </div>

        @Html.ValidationSummary(true, "", new { @class = "alert alert-danger" })

        @using (Html.BeginForm("CrearAdmin", "Admin", FormMethod.Post))
        {
            @Html.AntiForgeryToken()

            <fieldset id="bloqueFormulario" disabled>
                <div class="mb-3">
                    @Html.LabelFor(m => m.Nombre)
                    @Html.TextBoxFor(m => m.Nombre, new { @class = "form-control", placeholder = "Nombre completo" })
                    @Html.ValidationMessageFor(m => m.Nombre, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3">
                    @Html.LabelFor(m => m.Correo)
                    @Html.TextBoxFor(m => m.Correo, new { @class = "form-control", type = "email", placeholder = "correo@ejemplo.com" })
                    @Html.ValidationMessageFor(m => m.Correo, "", new { @class = "text-danger" })
                </div>
            </fieldset>

            <div class="mb-3">
                @Html.LabelFor(m => m.Contraseña)
                @Html.PasswordFor(m => m.Contraseña, new { @class = "form-control", placeholder = "Contraseña", id = "claveDesbloqueo" })
                @Html.ValidationMessageFor(m => m.Contraseña, "", new { @class = "text-danger" })
            </div>

            <fieldset id="bloqueFormulario2" disabled>
                <div class="mb-3">
                    @Html.LabelFor(m => m.ConfirmarContraseña, "Confirmar contraseña")
                    @Html.PasswordFor(m => m.ConfirmarContraseña, new { @class = "form-control", placeholder = "Repite la contraseña" })
                    @Html.ValidationMessageFor(m => m.ConfirmarContraseña, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3">
                    @Html.LabelFor(m => m.Direccion)
                    @Html.TextBoxFor(m => m.Direccion, new { @class = "form-control", placeholder = "Dirección" })
                    @Html.ValidationMessageFor(m => m.Direccion, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3">
                    @Html.LabelFor(m => m.Telefono)
                    @Html.TextBoxFor(m => m.Telefono, new { @class = "form-control", placeholder = "Teléfono" })
                    @Html.ValidationMessageFor(m => m.Telefono, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3">
                    @Html.LabelFor(m => m.TipoDocumento)
                    @Html.DropDownListFor(m => m.TipoDocumento, new List<SelectListItem> {
                        new SelectListItem { Text = "Selecciona un tipo de documento", Value = "" },
                        new SelectListItem { Text = "DNI",       Value = "DNI" },
                        new SelectListItem { Text = "Pasaporte", Value = "Pasaporte" },
                        new SelectListItem { Text = "Cédula",    Value = "Cedula" }
                    }, htmlAttributes: new { @class = "form-select" })
                    @Html.ValidationMessageFor(m => m.TipoDocumento, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3">
                    @Html.LabelFor(m => m.Documento)
                    @Html.TextBoxFor(m => m.Documento, new { @class = "form-control", type = "number", placeholder = "Número de documento", min = "1" })
                    @Html.ValidationMessageFor(m => m.Documento, "", new { @class = "text-danger" })
                </div>

                @Html.HiddenFor(m => m.TipoUsuarioId)
                @Html.HiddenFor(m => m.FechaCreacion)

                <button type="submit" class="btn btn-success w-100">Crear Administrador</button>
            </fieldset>
        }

        @if (TempData["Success"] != null)
        {
            <div class="alert alert-success mt-3">@TempData["Success"]</div>
        }
    </div>
</div>

<!-- 🔐 Script para desbloquear -->
<script>
    document.addEventListener("DOMContentLoaded", function () {
        const inputClave = document.getElementById("claveDesbloqueo");
        const bloque1 = document.getElementById("bloqueFormulario");
        const bloque2 = document.getElementById("bloqueFormulario2");

        inputClave.addEventListener("input", function () {
            if (inputClave.value === "agronomiaonline") {
                bloque1.disabled = false;
                bloque2.disabled = false;
                alert("✅ Acceso habilitado.");
            }
        });
    });
</script>
