@model List<AGONFRONT.Models.ProductoEnCarrito>
@{
    ViewBag.Title = "Carrito";
    Layout = "~/Views/Shared/_LayoutLoged.cshtml";
}

<h2>Carrito</h2>

<link rel="stylesheet" href="@Url.Content("~/Content/css/pagina 19.css")" />
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" />
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet" />

<div class="container mt-5 pt-5">
    <h2 class="text-center mb-4">Carrito de Compras</h2>

    @if (Model == null || !Model.Any())
    {
        <div class="alert alert-warning text-center" role="alert">
            No tienes productos agregados al carrito aún.
        </div>
    }
    else
    {
        <div class="table-responsive">
            <table class="table table-bordered">
                <thead>
                    <tr>
                        <th>Producto</th>
                        <th>Precio</th>
                        <th>Cantidad</th>
                        <th>Subtotal</th>
                        <th>Acciones</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var producto in Model)
                    {
                        <tr data-nombre="@producto.Nombre">
                            <td>
                                <div class="d-flex align-items-center">
                                    <img src="@producto.UrlImagen" class="img-fluid me-3" alt="Producto" />
                                    <span>@producto.Nombre</span>
                                </div>
                            </td>
                            <td class="precio">@producto.Precio.ToString("F2")</td>
                            <td>
                                <input type="number" class="form-control cantidad" value="@producto.Cantidad" min="1" />
                            </td>
                            <td class="subtotal">@((producto.Precio * producto.Cantidad).ToString("F2"))</td>
                            <td>
                                <button class="btn btn-danger btnEliminar">
                                    <i class="bi bi-trash"></i> Eliminar
                                </button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <div class="d-flex justify-content-between mt-4">
            <h4>Total: <span class="totalGeneral">@Model.Sum(p => p.Precio * p.Cantidad).ToString("F2")</span></h4>
            <div>
                <a href="@Url.Action("Productos", "Productos")" class="btn btn-warning me-2">Seguir Comprando</a>
                @Html.ActionLink("Finalizar Compra", "PasarelaPago", "Carrito", null, new { @class = "btn btn-success", id = "btnFinalizarCompra" })
            </div>
        </div>
    }
</div>

<footer class="bg-dark text-white py-2 mt-5">
    <div class="container-fluid">
        <div class="d-flex justify-content-between align-items-center">
            <div>
                <a href="https://facebook.com" class="text-white me-3" target="_blank">
                    <i class="bi bi-facebook" style="font-size: 2rem;"></i>
                </a>
                <a href="https://instagram.com" class="text-white me-3" target="_blank">
                    <i class="bi bi-instagram" style="font-size: 2rem;"></i>
                </a>
                <a href="https://twitter.com" class="text-white me-3" target="_blank">
                    <i class="bi bi-twitter" style="font-size: 2rem;"></i>
                </a>
            </div>
            <div class="d-flex align-items-center text-muted">
                <i class="bi bi-question-circle" style="font-size: 1.5rem; margin-right: 8px; color: #fff;"></i>
                <span style="color: #fff;">¿Necesitas ayuda?</span>
            </div>
        </div>
    </div>
</footer>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const tbody = document.querySelector('table tbody');
        const totalGeneralEl = document.querySelector('.totalGeneral');

        // Función para recalcular subtotales y total general
        function actualizarTotales() {
            let totalCarrito = 0;

            tbody.querySelectorAll('tr').forEach(fila => {
                const precio = parseFloat(fila.querySelector('.precio').innerText) || 0;
                const inputCantidad = fila.querySelector('input.cantidad');
                const cantidad = parseInt(inputCantidad.value) || 0;

                const subtotal = precio * cantidad;
                fila.querySelector('.subtotal').innerText = subtotal.toFixed(2);

                totalCarrito += subtotal;
            });

            totalGeneralEl.innerText = totalCarrito.toFixed(2);
        }

        // Al cambiar cantidad, actualizar totales y guardar carrito
        tbody.querySelectorAll('input.cantidad').forEach(input => {
            input.addEventListener('change', function () {
                if (this.value < 1) this.value = 1; // mínimo 1
                actualizarTotales();
                guardarCarrito();
            });
        });

        // Función para guardar carrito actualizado en localStorage
        function guardarCarrito() {
            const carrito = [];
            tbody.querySelectorAll('tr').forEach(fila => {
                const nombre = fila.getAttribute('data-nombre');
                const precio = parseFloat(fila.querySelector('.precio').innerText) || 0;
                const cantidad = parseInt(fila.querySelector('input.cantidad').value) || 0;

                carrito.push({ nombre, precio, cantidad });
            });
            localStorage.setItem('carritoParaPago', JSON.stringify(carrito));
        }

        // Evento para eliminar producto
        tbody.addEventListener('click', function (e) {
            if (e.target.closest('.btnEliminar')) {
                const fila = e.target.closest('tr');
                const nombreProducto = fila.getAttribute('data-nombre');

                // Eliminar fila del DOM
                fila.remove();

                // Actualizar totales y carrito en localStorage
                actualizarTotales();
                guardarCarrito();
            }
        });

        // Al cargar la página, actualizar totales y carrito (por si acaso)
        actualizarTotales();
        guardarCarrito();

        // Botón finalizar compra: solo guarda carrito y deja seguir navegando
        document.getElementById('btnFinalizarCompra').addEventListener('click', function () {
            guardarCarrito();
        });
    });
</script>