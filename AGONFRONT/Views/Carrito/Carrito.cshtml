@model List<AGONFRONT.Models.ProductoEnCarrito>
@{
    ViewBag.Title = "Carrito";
    Layout = "~/Views/Shared/_LayoutLoged.cshtml";
}
<head>
    <style>
        footer {
            position: static;
        }
        /* Contenido principal */
        .cart-container {
            background-color: white;
            border-radius: 12px;
            box-shadow: var(--shadow-sm);
            padding: 2rem;
            margin-bottom: 3rem;
            transition: var(--transition);
        }

            .cart-container:hover {
                box-shadow: var(--shadow-md);
            }

        .cart-title {
            font-family: 'Merriweather', serif;
            font-weight: 700;
            color: var(--primary-dark);
            margin-bottom: 2rem;
            position: absolute;
            padding-bottom: 0.5rem;
        }

            .cart-title::after {
                content: '';
                position: absolute;
                bottom: 0;
                left: 0;
                width: 80px;
                height: 3px;
                background: var(--primary);
            }

        /* Tabla de carrito */
        .cart-table {
            width: 100%;
            border-collapse: separate;
            border-spacing: 0 15px;
        }

            .cart-table thead th {
                border-bottom: 2px solid var(--primary-light);
                padding: 1rem;
                text-align: left;
                font-weight: 600;
                color: var(--primary-dark);
            }

            .cart-table tbody tr {
                background-color: white;
                border-radius: 10px;
                box-shadow: var(--shadow-sm);
                transition: var(--transition);
            }

                .cart-table tbody tr:hover {
                    transform: translateY(-5px);
                    box-shadow: var(--shadow-md);
                }

            .cart-table td {
                padding: 1.5rem;
                vertical-align: middle;
            }

        .product-info {
            display: flex;
            align-items: center;
        }

        .product-img {
            width: 80px;
            height: 80px;
            object-fit: cover;
            border-radius: 8px;
            margin-right: 1.5rem;
            transition: var(--transition);
        }

            .product-img:hover {
                transform: scale(1.05);
            }

        .product-name {
            font-weight: 600;
            margin-bottom: 0.25rem;
        }

        .product-category {
            color: #666;
            font-size: 0.9rem;
        }

        .product-price {
            font-weight: 700;
            color: var(--primary);
        }

        .quantity-input {
            width: 70px;
            text-align: center;
            border: 1px solid #ddd;
            border-radius: 6px;
            padding: 0.5rem;
            transition: var(--transition);
        }

            .quantity-input:focus {
                border-color: var(--primary);
                box-shadow: 0 0 0 0.2rem rgba(39, 174, 96, 0.25);
                outline: none;
            }

        .remove-btn {
            background-color: #ff6b6b;
            color: white;
            border: none;
            border-radius: 6px;
            padding: 0.5rem 1rem;
            font-weight: 600;
            transition: var(--transition);
        }

            .remove-btn:hover {
                background-color: #ff5252;
                transform: translateY(-2px);
            }

        /* Resumen del carrito */
        .cart-summary {
            background-color: white;
            border-radius: 12px;
            box-shadow: var(--shadow-sm);
            padding: 2rem;
            margin-top: 2rem;
        }

        .summary-title {
            font-weight: 700;
            color: var(--primary-dark);
            margin-bottom: 1.5rem;
        }

        .summary-row {
            display: flex;
            justify-content: space-between;
            margin-bottom: 1rem;
            padding-bottom: 1rem;
            border-bottom: 1px solid #eee;
        }

        .summary-total {
            font-weight: 700;
            font-size: 1.2rem;
            color: var(--primary-dark);
        }

        .btn-continue {
            background-color: var(--accent);
            color: var(--dark);
            font-weight: 600;
            border: none;
            border-radius: 8px;
            padding: 0.75rem 1.5rem;
            transition: var(--transition);
        }

            .btn-continue:hover {
                background-color: #f5b731;
                transform: translateY(-3px);
            }

        .btn-checkout {
            background: linear-gradient(135deg, var(--primary), var(--secondary));
            color: white;
            font-weight: 600;
            border: none;
            border-radius: 8px;
            padding: 0.75rem 1.5rem;
            transition: var(--transition);
            box-shadow: 0 4px 15px rgba(39, 174, 96, 0.3);
        }

            .btn-checkout:hover {
                transform: translateY(-3px);
                box-shadow: 0 8px 20px rgba(39, 174, 96, 0.4);
                color: white;
            }
    </style>
</head>
<h2>Carrito</h2>

<link rel="stylesheet" href="@Url.Content("~/Content/css/pagina 19.css")" />
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" />
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet" />

<div class="container my-5 animate__animated animate__fadeIn">
    <h1 class="cart-title">Tu Carrito de Compras</h1>

    @if (Model == null || !Model.Any())
    {
        <div class="alert alert-warning text-center" role="alert">
            No tienes productos agregados al carrito aún.
        </div>
    }
    else
    {
        <div class="cart-container">
            <div class="table-responsive">
                <table class="cart-table">
                    <thead>
                        <tr>
                            <th>Producto</th>
                            <th>Precio</th>
                            <th>Cantidad</th>
                            <th>Total</th>
                            <th>Acciones</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var producto in Model)
                        {
                            <tr data-nombre="@producto.Nombre">
                                <td data-label="Producto">
                                    <div class="product-info">
                                        <img src="@producto.UrlImagen" class="product-img" alt="@producto.Nombre">
                                        <div>
                                            <div class="product-name">@producto.Nombre</div>
                                        </div>
                                    </div>
                                </td>
                                <td class="product-price precio">$@producto.Precio.ToString("F2")</td>
                                <td>
                                    <input type="number" class="quantity-input cantidad sn" value="@producto.Cantidad" min="1">
                                </td>
                                <td class="product-total subtotal">
                                    $@((producto.Precio * producto.Cantidad).ToString("F2"))
                                </td>
                                <td>
                                    <button type="button" class="remove-btn btnEliminar btn btn-danger btn-sm">
                                        <i class="bi bi-trash me-1"></i> Eliminar
                                    </button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            @{
                var total = Model.Sum(p => p.Precio * p.Cantidad);
            }

            <div class="cart-summary">
                <h3 class="summary-title">Resumen del Pedido</h3>

                @foreach (var producto in Model)
                {
                    <div class="summary-row">
                        <span>@producto.Nombre:</span>
                        <span>$@((producto.Precio * producto.Cantidad).ToString("F2"))</span>
                    </div>
                }

                <div class="summary-row summary-total">
                    <span>Total:</span>
                    <span class="summary-total-amount">$@total.ToString("F2")</span>
                </div>

                <div class="d-flex justify-content-between mt-4 btn-group">
                    <a href="@Url.Action("Productos", "Productos")" class="btn btn-continue btn-warning">
                        <i class="bi bi-arrow-left me-1"></i> Seguir Comprando
                    </a>
                    <form method="post" action="@Url.Action("Redirigir", "Pagos")">

                        @for (int i = 0; i < Model.Count; i++)
                        {
                            <input type="hidden" name="[@i].ProductoId" value="@Model[i].ProductoId" />
                            <input type="hidden" name="[@i].Nombre" value="@Model[i].Nombre" />
                            <input type="hidden" name="[@i].Precio" value="@Model[i].Precio" />
                            <input type="hidden" name="[@i].Cantidad" value="@Model[i].Cantidad" />
                            <input type="hidden" name="[@i].UrlImagen" value="@Model[i].UrlImagen" />
                        }

                        <button type="submit" class="btn btn-success">
                            <i class="bi bi-credit-card me-1"></i> Finalizar Compra
                        </button>
                    </form>

                </div>
            </div>
        </div>
    }
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const tbody = document.querySelector('table tbody');
        const totalGeneralEl = document.querySelector('.summary-total-amount');

        function limpiarMoneda(texto) {
            return parseFloat(texto.replace('$', '')) || 0;
        }

        function actualizarTotales() {
            let totalCarrito = 0;

            tbody.querySelectorAll('tr').forEach(fila => {
                const precio = limpiarMoneda(fila.querySelector('.precio').innerText);
                const cantidad = parseInt(fila.querySelector('input.cantidad').value) || 1;
                const subtotal = precio * cantidad;
                fila.querySelector('.subtotal').innerText = `$${subtotal.toFixed(2)}`;
                totalCarrito += subtotal;
            });

            if (totalGeneralEl) {
                totalGeneralEl.innerText = `$${totalCarrito.toFixed(2)}`;
            }
        }

        function guardarCarrito() {
            const carrito = [];
            tbody.querySelectorAll('tr').forEach(fila => {
                const nombre = fila.getAttribute('data-nombre');
                const precio = limpiarMoneda(fila.querySelector('.precio').innerText);
                const cantidad = parseInt(fila.querySelector('input.cantidad').value) || 1;

                carrito.push({ nombre, precio, cantidad });
            });
            localStorage.setItem('carritoParaPago', JSON.stringify(carrito));
        }

        // Cambio de cantidad
        tbody.querySelectorAll('input.cantidad').forEach(input => {
            input.addEventListener('change', function () {
                if (this.value < 1) this.value = 1;
                actualizarTotales();
                guardarCarrito();
            });
        });

        // Eliminar producto
        tbody.addEventListener('click', function (e) {
            if (e.target.closest('.btnEliminar')) {
                const fila = e.target.closest('tr');
                fila.remove();
                actualizarTotales();
                guardarCarrito();
            }
        });

        // Finalizar compra (guardar carrito)
        document.getElementById('btnFinalizarCompra')?.addEventListener('click', function () {
            guardarCarrito();
        });

        // Inicial
        actualizarTotales();
        guardarCarrito();
    });

    document.getElementById('formFinalizarCompra').addEventListener('submit', function (e) {
        const tbody = document.querySelector('table tbody');
        const carrito = [];

        tbody.querySelectorAll('tr').forEach(fila => {
            const nombre = fila.getAttribute('data-nombre');
            const precio = parseFloat(fila.querySelector('.precio').innerText.replace('$', '')) || 0;
            const cantidad = parseInt(fila.querySelector('input.cantidad').value) || 1;

            carrito.push({ Nombre: nombre, Precio: precio, Cantidad: cantidad });
        });

        document.getElementById('carritoJson').value = JSON.stringify(carrito);
    });

</script>
